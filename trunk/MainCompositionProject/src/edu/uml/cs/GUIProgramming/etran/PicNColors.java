/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PicNColors.java
 *
 * Created on Mar 7, 2009, 6:40:45 PM
 */


package edu.uml.cs.GUIProgramming.etran;

//import edu.uml.cs.GUIProgramming.MusicComp.*;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;


/**
 * Adds Images and Colors the borders of a rectangle for now.
 * @author Elizabeth Tran
 */
public class PicNColors extends javax.swing.JFrame {

    /** the following is required to keep NetBeans happy */
    static final long serialVersionUID = 0 ;
    
    /** The main application for reference within this class. */
    //Main mainApp = null;

    /** Creates new form PicNColors */
    public PicNColors() {
        initComponents();
    }

  /**
   * Call this constructor from the Main application to initialize the class level mainApp object.
   * @param mainApp the main application for reference within this class
   */
  //public PicNColors( Main mainApp ) {
    //this();   // call the default constructor, which must always be called first
    //this.mainApp = mainApp;   // save the reference to the Main application
  //}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jImgChooser = new javax.swing.JFileChooser();
        jColorChooser = new javax.swing.JColorChooser();
        Square =  new Resizing();
        Resizer resizer = new Resizer((Resizing)Square);
        Square.addMouseListener(resizer);
        Square.addMouseMotionListener(resizer);
        jAddImg = new javax.swing.JButton();
        jDeleteImg = new javax.swing.JButton();
        jChngColor = new javax.swing.JButton();
        jExitButton = new javax.swing.JButton();

        //Add a custom file filter and disable the default
        //(Accept All) file filter.
        jImgChooser.addChoosableFileFilter(new ImageFilter());
        jImgChooser.setAcceptAllFileFilterUsed(false);

        //Add custom icons for file types.
        jImgChooser.setFileView(new ImageFileView());

        //Add the preview pane.
        jImgChooser.setAccessory(new ImagePreview(jImgChooser));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pictures and Colors");

        javax.swing.GroupLayout SquareLayout = new javax.swing.GroupLayout(Square);
        Square.setLayout(SquareLayout);
        SquareLayout.setHorizontalGroup(
            SquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );
        SquareLayout.setVerticalGroup(
            SquareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        jAddImg.setText("Add Image");
        jAddImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddImgActionPerformed(evt);
            }
        });

        jDeleteImg.setText("Delete Image");
        jDeleteImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteImgActionPerformed(evt);
            }
        });

        jChngColor.setText("Change Color");
        jChngColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChngColorActionPerformed(evt);
            }
        });

        jExitButton.setText("Exit");
        jExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAddImg)
                    .addComponent(jDeleteImg)
                    .addComponent(jChngColor)
                    .addComponent(jExitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(Square, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jAddImg)
                        .addGap(28, 28, 28)
                        .addComponent(jDeleteImg)
                        .addGap(29, 29, 29)
                        .addComponent(jChngColor)
                        .addGap(26, 26, 26)
                        .addComponent(jExitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(Square, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exits the Jframe
     * @param evt A Standard Java ActionEvent
     */
    private void jExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitButtonActionPerformed
//      if ( mainApp != null ) {
//        mainApp.btnExitActionPerformed();   // note call to method in Main class
//      } else {
//        System.exit( 0 );
//      }
    }//GEN-LAST:event_jExitButtonActionPerformed

    /**
     * Opens a Color File Chooser and changes the color of the border of the rectangle
     * @param evt A standard Java ActionEvent
     */
    private void jChngColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChngColorActionPerformed
        //Changes the color of the border of the Rectangle
        Color c = jColorChooser.showDialog(PicNColors.this, "Choose a color...", getBackground());
        if (c != null)  {
            ((Resizing) Square).reDraw(c, Square.getGraphics());
        }
    }//GEN-LAST:event_jChngColorActionPerformed

    /**
     * Deletes the Image from the Rectangle
     * @param evt A standard Java ActionEvent
     */
    private void jDeleteImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteImgActionPerformed
        //Deletes the image
        ((Resizing) Square).setUp(null);
    }//GEN-LAST:event_jDeleteImgActionPerformed

    /**
     * Adds and Image to the rectangle
     * @param evt A standard Java ActionEvent
     */
    private void jAddImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddImgActionPerformed
        // TODO add your handling code here:
        String imgPath = setupImageFileChooser();
        ImageIcon ImgIcon = new ImageIcon(imgPath);
        System.out.println(imgPath);
//        Image ImgtoScale = ImgIcon.getImage();
//        Image scaledImg = ImgtoScale.getScaledInstance( width, height, Image.SCALE_SMOOTH);
        ((Resizing) Square).setUp(ImgIcon);
    }//GEN-LAST:event_jAddImgActionPerformed


     /**
     * This sets up the JFileChooser for choosing an image
     * Courtesy of Ross
     * @return the path to the image that was selected
     */
    private String setupImageFileChooser() {

        String path;                // The absolute path to the image selected
//Repeated in the post init generated code
//        //Set up the file chooser.
//        if ( jImgChooser == null) {
//
//        //Add a custom file filter and disable the default
//        //(Accept All) file filter.
//            jImgChooser.addChoosableFileFilter(new ImageFilter());
//            jImgChooser.setAcceptAllFileFilterUsed(false);
//
//        //Add custom icons for file types.
//            jImgChooser.setFileView(new ImageFileView());
//
//        //Add the preview pane.
//            jImgChooser.setAccessory(new ImagePreview(jImgChooser));
//        }

        //Show it.
        int returnVal = jImgChooser.showDialog(this,
                                      "Select Image");

        //Process the results.
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jImgChooser.getSelectedFile();
            path = file.getAbsolutePath();
        } else {
            path = "";
        }

        //Reset the file chooser for the next time it's shown.
        jImgChooser.setSelectedFile(null);

        return path;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PicNColors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /** The Resizing object that holds a rectangle */
    private javax.swing.JPanel Square;
    /** Adds an image from the file chooser to the rectangle, Square. */
    private javax.swing.JButton jAddImg;
    /** Changes the color of the border of the rectangle Square */
    private javax.swing.JButton jChngColor;
    /** The jColorChooser to set the color of the border of the rectangle, Square */
    private javax.swing.JColorChooser jColorChooser;
    /* Deletes the image set in the rectangle */
    private javax.swing.JButton jDeleteImg;
    /** Exits the Application */
    private javax.swing.JButton jExitButton;
    private javax.swing.JFileChooser jImgChooser;
    /** The file chooser that sets the icon within the square to the chosen file */
    // End of variables declaration//GEN-END:variables

}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InstrumentSelectDemo.java
 *
 * Created on Feb 19, 2009, 2:43:03 AM
 */

package edu.uml.cs.GUIProgramming.plaidler;

import edu.uml.cs.GUIProgramming.heines.GUIUtilities.*;


/**
 * This class contains an interface to select orchestra instruments.
 * @author Paul A Laidler, UMass Lowell Computer Science
 * @version 1.01, March 18, 2009
 */
public class OrchestraStub extends javax.swing.JFrame {

    /** The orchestra object to be used by the Instrument interface. */
    Orchestra myOrchestra;
    /** A widgit to be attached to the main application to display Instrument Information */
    InstrumentInfo iInfo;

    /** Creates new form OrchestraStub */
    public OrchestraStub() {
        //Use static method from heines utilities to set windows style UIManager
        edu.uml.cs.GUIProgramming.heines.GUIUtilities.SetNetBeansCompatibleUIManager();

        initComponents();

        //create a new orchestra
        myOrchestra = new Orchestra();
        //create a new form Instrument Information, pass this Form for reference.
        iInfo = new InstrumentInfo( this );
        //Allow the Instrument Information form to attach its panel to a panel in this form.
        iInfo.attachInfoPanel( this.jpnl_InstrumentInfoArea );
        //Attach a listener to the Instrument Information panel's combo box.
        iInfo.attachComboBoxListener( new InstrumentInfoAppComboBoxListener() );

        //Select the first button in the instrument buttons button group.
        InstrumentButtons.setSelected(jb_Instrument1.getModel(), rootPaneCheckingEnabled);
    }

    /**
     * A ComboBox action listener to attach to the Instrument Information Application.
     */
    class InstrumentInfoAppComboBoxListener implements java.awt.event.ActionListener {
        public void actionPerformed(java.awt.event.ActionEvent e) {
            Runnable updateInfoPanel = new Runnable() {
                public void run() {
                    //Iterate through the buttons in the instruments button group to find the selected one.
                    java.awt.Component[] components = jpnl_Instruments.getComponents();
                    for (java.awt.Component c : components)
                    {
                      javax.swing.JToggleButton jb = (javax.swing.JToggleButton) c;
                      if (jb.isSelected()) {
                          //Set the text on the selected button to reflect the currently selected instrument.
                          jb.setText(myOrchestra.getSelectedInstrumentName());
                      }
                    }
                }
            };
            //InvokeLater to avoid updating instrument before it has been changed by other button action listeners.
            javax.swing.SwingUtilities.invokeLater(updateInfoPanel);
        }
    }

    /**
     * Attach the specified action listener to all instrument selection buttons.
     */
    public void attachButtonChangeListener(java.awt.event.ActionListener myActionListener) {
        jb_Instrument5.addActionListener(myActionListener);
        jb_Instrument9.addActionListener(myActionListener);
        jb_Instrument8.addActionListener(myActionListener);
        jb_Instrument2.addActionListener(myActionListener);
        jb_Istrument10.addActionListener(myActionListener);
        jb_Instrument3.addActionListener(myActionListener);
        jb_Instrument4.addActionListener(myActionListener);
        jb_Instrument1.addActionListener(myActionListener);
        jb_Instrument7.addActionListener(myActionListener);
        jb_Instrument6.addActionListener(myActionListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InstrumentButtons = new javax.swing.ButtonGroup();
        jpnl_Instruments = new javax.swing.JPanel();
        jb_Instrument1 = new javax.swing.JToggleButton();
        jb_Instrument2 = new javax.swing.JToggleButton();
        jb_Instrument3 = new javax.swing.JToggleButton();
        jb_Instrument4 = new javax.swing.JToggleButton();
        jb_Instrument5 = new javax.swing.JToggleButton();
        jb_Instrument6 = new javax.swing.JToggleButton();
        jb_Instrument7 = new javax.swing.JToggleButton();
        jb_Instrument8 = new javax.swing.JToggleButton();
        jb_Instrument9 = new javax.swing.JToggleButton();
        jb_Istrument10 = new javax.swing.JToggleButton();
        jpnl_InstrumentInfoArea = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Instrument Select");

        jpnl_Instruments.setLayout(new java.awt.GridLayout(2, 0));

        InstrumentButtons.add(jb_Instrument1);
        jb_Instrument1.setText("Piano");
        jb_Instrument1.setFocusable(false);
        jb_Instrument1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument1ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument1);

        InstrumentButtons.add(jb_Instrument2);
        jb_Instrument2.setText("Clavinet");
        jb_Instrument2.setFocusable(false);
        jb_Instrument2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument2ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument2);

        InstrumentButtons.add(jb_Instrument3);
        jb_Instrument3.setText("Nylon Str Guitar");
        jb_Instrument3.setFocusable(false);
        jb_Instrument3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument3ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument3);

        InstrumentButtons.add(jb_Instrument4);
        jb_Instrument4.setText("Overdrive Guitar");
        jb_Instrument4.setFocusable(false);
        jb_Instrument4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument4ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument4);

        InstrumentButtons.add(jb_Instrument5);
        jb_Instrument5.setText("Acoustic Bass");
        jb_Instrument5.setFocusable(false);
        jb_Instrument5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument5ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument5);

        InstrumentButtons.add(jb_Instrument6);
        jb_Instrument6.setText("Violin");
        jb_Instrument6.setFocusable(false);
        jb_Instrument6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument6ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument6);

        InstrumentButtons.add(jb_Instrument7);
        jb_Instrument7.setText("Ensemble Strings");
        jb_Instrument7.setFocusable(false);
        jb_Instrument7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument7ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument7);

        InstrumentButtons.add(jb_Instrument8);
        jb_Instrument8.setText("Choir Aahs");
        jb_Instrument8.setFocusable(false);
        jb_Instrument8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument8ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument8);

        InstrumentButtons.add(jb_Instrument9);
        jb_Instrument9.setText("Brass Ensemble");
        jb_Instrument9.setFocusable(false);
        jb_Instrument9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Instrument9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Instrument9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Instrument9ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Instrument9);

        InstrumentButtons.add(jb_Istrument10);
        jb_Istrument10.setText("Drumkit");
        jb_Istrument10.setFocusable(false);
        jb_Istrument10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jb_Istrument10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jb_Istrument10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Istrument10ActionPerformed(evt);
            }
        });
        jpnl_Instruments.add(jb_Istrument10);

        jpnl_InstrumentInfoArea.setPreferredSize(new java.awt.Dimension(256, 92));

        javax.swing.GroupLayout jpnl_InstrumentInfoAreaLayout = new javax.swing.GroupLayout(jpnl_InstrumentInfoArea);
        jpnl_InstrumentInfoArea.setLayout(jpnl_InstrumentInfoAreaLayout);
        jpnl_InstrumentInfoAreaLayout.setHorizontalGroup(
            jpnl_InstrumentInfoAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );
        jpnl_InstrumentInfoAreaLayout.setVerticalGroup(
            jpnl_InstrumentInfoAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnl_InstrumentInfoArea, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpnl_Instruments, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jpnl_InstrumentInfoArea, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jpnl_Instruments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(254, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * button Instrument 1 action performed
     * @param evt
     */
    private void jb_Instrument1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument1ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(0);
        myOrchestra.playNote(0, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument1ActionPerformed
    /**
     * button Instrument 2 action performed
     * @param evt
     */
    private void jb_Instrument2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument2ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(1);
        myOrchestra.playNote(1, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument2ActionPerformed
    /**
     * button Instrument 3 action performed
     * @param evt
     */
    private void jb_Instrument3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument3ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(2);
        myOrchestra.playNote(2, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument3ActionPerformed
    /**
     * button Instrument 4 action performed
     * @param evt
     */
    private void jb_Instrument4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument4ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(3);
        myOrchestra.playNote(3, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument4ActionPerformed
    /**
     * button Instrument 5 action performed
     * @param evt
     */
    private void jb_Instrument5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument5ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(4);
        myOrchestra.playNote(4, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument5ActionPerformed
    /**
     * button Instrument 6 action performed
     * @param evt
     */
    private void jb_Instrument6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument6ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(5);
        myOrchestra.playNote(5, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument6ActionPerformed
    /**
     * button Instrument 7 action performed
     * @param evt
     */
    private void jb_Instrument7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument7ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(6);
        myOrchestra.playNote(6, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument7ActionPerformed
    /**
     * button Instrument 8 action performed
     * @param evt
     */
    private void jb_Instrument8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument8ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(7);
        myOrchestra.playNote(7, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument8ActionPerformed
    /**
     * button Instrument 9 action performed
     * @param evt
     */
    private void jb_Instrument9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Instrument9ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(8);
        myOrchestra.playNote(8, 60, 80, 500);
}//GEN-LAST:event_jb_Instrument9ActionPerformed
    /**
     * button Instrument 10 action performed
     * @param evt
     */
    private void jb_Istrument10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Istrument10ActionPerformed
        // TODO add your handling code here:
        myOrchestra.selectChannel(9);
        myOrchestra.playNote(9, 60, 80, 500);
}//GEN-LAST:event_jb_Istrument10ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrchestraStub().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup InstrumentButtons;
    private javax.swing.JToggleButton jb_Instrument1;
    private javax.swing.JToggleButton jb_Instrument2;
    private javax.swing.JToggleButton jb_Instrument3;
    private javax.swing.JToggleButton jb_Instrument4;
    private javax.swing.JToggleButton jb_Instrument5;
    private javax.swing.JToggleButton jb_Instrument6;
    private javax.swing.JToggleButton jb_Instrument7;
    private javax.swing.JToggleButton jb_Instrument8;
    private javax.swing.JToggleButton jb_Instrument9;
    private javax.swing.JToggleButton jb_Istrument10;
    private javax.swing.JPanel jpnl_InstrumentInfoArea;
    private javax.swing.JPanel jpnl_Instruments;
    // End of variables declaration//GEN-END:variables

}
